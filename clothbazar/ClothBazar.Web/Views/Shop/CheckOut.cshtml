@model ClothBazar.Web.ViewModels.CheckOutViewModel
@{
    ViewBag.Title = "CheckOut";
}

@*<h2>CheckOut</h2>
@if (Model.cartProducts != null)
{
    
    foreach (var product in Model.cartProducts)
    {
        var quantity = @Model.ProductID.Where(x => x == product.ID).Count();
        <div>Name :@product.Name - Price: @product.Price - Quantity : @quantity - Total : @(product.Price * Model.ProductID.Where(x => x == product.ID).Count()) </div>

    }
    <div>Total Bill : @Model.cartProducts.Sum(x => x.Price * Model.ProductID.Where(y => y==x.ID).Count())</div>

}
else
{
    <h1>Cart is empty</h1>
}*@
@if (Model.cartProducts != null)
{
    var i = 1;
    <div class="container">
        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Your cart</span>
                    <span class="badge badge-secondary badge-pill">3</span>
                </h4>

                <ul class="list-group mb-3">


                    @foreach (var item in Model.cartProducts)
                    {
                        
                        var quantity = @Model.ProductID.Where(x => x == item.ID).Count();
                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">@i) @item.Name - Qty (@quantity)</h6>
                                <small class="text-muted">@(item.Description.Length > 100 ? item.Description.Substring(0,99)+ "................" : item.Description)</small>
                            </div>
                            <span class="text-muted">@item.Price</span>
                        </li>
                        i++;
                    }




                    <li class="list-group-item d-flex justify-content-between">
                        <span>Total (USD)</span>
                        <strong>Total Bill : @Model.cartProducts.Sum(x => x.Price * Model.ProductID.Where(y => y == x.ID).Count())</strong>
                    </li>
                </ul>


            </div>
            <div class="col-md-8 order-md-1">
                <h4 class="mb-3">Billing address</h4>
                <form class="needs-validation" novalidate="">
                    <div class="row">
                        <div class="col-md-12">
                            <label for="Name">Name</label>
                            <input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.Name" required="">
                           
                        </div>
                    
                    </div>
   

             

                    <div class="mb-3">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" placeholder="you@example.com" value="@Model.User.Email">
                       
                    </div>

                    <div class="mb-3">
                        <label for="address">Address</label>
                        <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="@Model.User.Address">
                       
                    </div>
                    <button id="PlaceOrderBtn" class="btn btn-primary btn-lg btn-block" type="button">Place Order</button>
                </form>
            </div>
        </div>
    </div>
    <script>
    $('#PlaceOrderBtn').click(function () {
        debugger;
        $.ajax({
            url: '@Url.Action("PlaceOrder","Shop")',
            data: {
                Products: '@string.Join("-", Model.ProductID)'
            }
        })
        .done(function (response) {
            if (response.Success) {
                $.cookie('myAddToCartCookie', '');
                cartCount();
                alert("Your order has been placed successfully");
                window.location = '@Url.Action("Index","Shop")';
            }
            else {
                alert("Sorry your order is unable to place");
            }
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {

        })

    });
    </script>
}
else
{
<div class="container">
    <h3 style="margin-bottom:350px;margin-top:20px">No Product in shopping cart.</h3>
</div>

}

