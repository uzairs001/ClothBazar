@model DetailViewModal
@{
    ViewBag.Title = "OrderDetails";
}

@*<h2>CheckOut</h2>
    @if (Model.cartProducts != null)
    {

        foreach (var product in Model.cartProducts)
        {
            var quantity = @Model.ProductID.Where(x => x == product.ID).Count();
            <div>Name :@product.Name - Price: @product.Price - Quantity : @quantity - Total : @(product.Price * Model.ProductID.Where(x => x == product.ID).Count()) </div>

        }
        <div>Total Bill : @Model.cartProducts.Sum(x => x.Price * Model.ProductID.Where(y => y==x.ID).Count())</div>

    }
    else
    {
        <h1>Cart is empty</h1>
    }*@
@if (Model.order != null)
{
    var i = 1;
    <div class="container">
        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">Your cart</span>
                    <span class="badge badge-secondary badge-pill">3</span>
                </h4>

                <ul class="list-group mb-3">


                    @foreach (var item in Model.order.orderItems)
                    {


                        <li class="list-group-item d-flex justify-content-between lh-condensed">
                            <div>
                                <h6 class="my-0">@i) @item.product.Name - Qty (@item.quantity)</h6>
                                <small class="text-muted">@(item.product.Description.Length > 100 ? item.product.Description.Substring(0, 99) + "................" : item.product.Description)</small>
                            </div>
                            <span class="text-muted">Unit Price : @item.product.Price </span>
                            <span class="text-muted">Total Price : @(item.product.Price  * item.quantity) </span>
                        </li>
                        i++;
                    }




                    @*<li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                            <strong>Total Bill : @Model.cartProducts.Sum(x => x.Price * Model.ProductID.Where(y => y == x.ID).Count())</strong>
                        </li>*@
                </ul>


            </div>
 
            <div class="col-md-8 order-md-1">
                <h4 class="mb-3">Billing address</h4>
                <form  class="needs-validation" novalidate="">
                    <div class="row">
                        <div class="col-md-12">
                            <label for="Name">Name</label>
                            <input type="text" class="form-control" id="Name" placeholder="" value="@Model.user.Name" required="" >

                        </div>

                    </div>




                    <div class="mb-3">
                        <label for="email">Email</label>
                        <input type="email" class="form-control" id="email" placeholder="you@example.com"  value="@Model.user.Email">

                    </div>

                    <div class="mb-3">
                        <label for="address">Address</label>
                        <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="@Model.user.Address">

                    </div>
                    <div class="mb-3">
                        <label for="status">Status</label>
                        <select id="changeStatus" class="form-control">
                            @foreach (var item in Model.AvailableStatus)
                            {
                                var isTrue = item == Model.order.status ? "selected" : string.Empty;
                                <option @isTrue>@item</option>
                            }


                        </select> 
                    </div>
                   
                </form>
            </div>
        </div>
    </div>
    <script>
        $("#changeStatus").change(function () {
           
        $.ajax({
            url: '@Url.Action("UpdateOrderStatus", "Order")',
            data: {
                status: $("#changeStatus").val(),
                ID: '@Model.order.ID'
            }
        })
        .done(function (response) {
            if (response.Success) {
               alert("Your order status has been modified successfully")
            }
            else {
                alert("Unsuccessful try")
            }
            window.location = '@Url.Action("Index","Order")';
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
            alert("FAIL");
        });
    });
    </script>
}
else
{
    <div class="container">
        <h3 style="margin-bottom:350px;margin-top:20px">No Product in shopping cart.</h3>
    </div>

}

